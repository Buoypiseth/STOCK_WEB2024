@{
    Layout = "~/Views/Shared/_LayoutFrontend.cshtml";
}
@model WebApplication.Models.BuyProduct
@section Styles {
    <link href="~/assets/plugins/select2/css/select2.min.css" rel="stylesheet">
    <link href="~/assets/plugins/select2-bootstrap4-theme/select2-bootstrap4.min.css" rel="stylesheet">
    <link href="~/assets/plugins/datatables-bs4/css/dataTables.bootstrap4.css" rel="stylesheet" />
    <link href="~/assets/plugins/datatables-responsive/css/responsive.bootstrap4.css" rel="stylesheet">
    <link href="~/assets/plugins/sweetalert2/sweetalert2.min.css" rel="stylesheet" />
    <link href="~/assets/plugins/toastr/toastr.min.css" rel="stylesheet" />
    <link href="~/assets/plugins/daterangepicker/daterangepicker.css" rel="stylesheet">
    <link rel="stylesheet" href="~/assets/plugins/icheck-bootstrap/icheck-bootstrap.min.css">
}

@Html.Partial("Partials/_SaleHead")
@Html.Partial("Partials/_Payment")
@Html.Partial("Partials/_SalePackage")
@*@Html.Partial("Partials/_CreateOrShowKeep")*@
<div class="row pt-2">
    <div class="col-sm-12">
        <table class="table table-sm table-hover data-table dt-responsive nowrap" style="width:100%">
            <thead style="font-size:14px">
                <tr>
                    <th>@Resources.Globle.No</th>
                    <th>@Resources.Sale.PrdNameEng</th>
                    <th>@Resources.Sale.unitType</th>
                    <th>@Resources.Sale.orderQty</th>
                    <th>@Resources.Sale.unitPrice</th>
                    <th>@Resources.Sale.AmtDisc</th>
                    <th>@Resources.Sale.totalAmt</th>
                    <th>@Resources.Globle.Option</th>
                    <th>cid</th>
                </tr>
            </thead>
            <tbody style="font-size:14px">
            </tbody>
            <tfoot>
                <tr>
                    <th colspan="6">@Resources.Sale.Total</th>
                    <th colspan="2"></th>
                    <th></th>
                </tr>
            </tfoot>
        </table>
    </div>
</div>
@section Scripts {
    <script src="~/assets/plugins/datatables/jquery.dataTables.js"></script>
    <script src="~/assets/plugins/datatables-bs4/js/dataTables.bootstrap4.js"></script>
    <script src="~/assets/plugins/datatables-responsive/js/dataTables.responsive.js"></script>
    <script src="~/assets/plugins/datatables-responsive/js/responsive.bootstrap4.js"></script>
    <script src="~/assets/plugins/select2/js/select2.full.min.js"></script>
    <script src="~/assets/plugins/sweetalert2/sweetalert2.min.js"></script>
    <script src="~/assets/plugins/sweetalert2/sweetalert2@9-sweetaler2.min.js"></script>
    <script src="~/assets/plugins/toastr/toastr.min.js"></script>
    <script src="~/assets/plugins/moment/moment.min.js"></script>
    <script src="~/assets/plugins/daterangepicker/daterangepicker.js"></script>

    <script type="text/javascript">
        var modalForm = $('#modal-form');
        var modalKeep = $('#modal-keep');
        var scanCode = $("#ScanCode");
        var btnSubmit = $('button[type="submit"]');

///-----block variable-----/
        //----- get attributes form-----/
        var customerId = $('#memberID');
        var productFilter = $('#ProductFilter');
        var badgeCount = $('#badge-count');

        //-----get attributes form payment-----/
        var customerOrderID = $('#customerOrderID');
        var roomtableID = $('#roomtableID');

        var usdTokhr = $('#usdTokhr');
        var usdToKhrChange = $('#usdToKhrChange');
        var usdToTHB = $('#usdToTHB');

        var totalAmount = $('#totalAmount');
        var totalAmountRiel = $('#totalAmountRiel');

        var amtDisc = $('#AmtDisc');

        var amtDiscRiel = $('#AmtDiscRiel');
        var percentDiscountRiel = $('#percentDiscountRiel');

        var netAmount = $('#netAmount');
        var netAmountRiel = $('#netAmountRiel');

        var amtReceived = $('#amtReceived');
        var amtReceivedRiel = $('#amtReceivedRiel');

        var amtReturn = $('#amtReturn');
        var amtReturnRiel = $('#amtReturnRiel');

        var amtOwed = $('#amtOwed');
        var amtOwedRiel = $('#amtOwedRiel');

        var returnDate = $('#ReturnDate');
        var descripitonTerm = $('#DescripitonTerm');

        var Product_PackageID = $('#Product_PackageID');
        var Qty = $('#Qty');
        var Description = $('#Description');

        ///-----declare variable-----/
        var _grandTotal = 0;
        var _amtLoan = 0;
        var _amtPay = 0;
        var _count = 0;

        var _totalAmount = 0;
        var _totalAmountRiel = 0;

        var _amtDisc = 0;
        var _amtDiscRiel = 0;

        var _netAmount = 0;
        var _netAmountRiel = 0;

        var _amtReceived = 0;
        var _amtReceivedRiel = 0;

        var _amtReturn = 0
        var _amtReturnRiel = 0

        var _amtOwed = 0;
        var _amtOwedRiel = 0;
///-----end block variable-----/
        $(function () {
            const Toast = Swal.mixin({
                toast: true,
                position: 'top-end',
                showConfirmButton: false,
                timer: 3000
            });

            $('.select2').select2();
            //Initialize Select2 Elements
            $('.select2bs4').select2({
                theme: 'bootstrap4',
            });

            $('.singledatepicker').daterangepicker({
                opens: 'right',
                drops: 'down',
                singleDatePicker: true,
                showDropdowns: true,
                minYear: 2000,
                maxYear: parseInt(moment().format('YYYY'), 10),
                locale: {
                    format: 'YYYY-MM-DD',
                    firstDay: 1
                }
            });

            $('.singledatetimepicker').daterangepicker({
                opens: 'right',
                drops: 'down',
                singleDatePicker: true,
                showDropdowns: true,
                minYear: 2000,
                maxYear: parseInt(moment().format('YYYY'), 10),
                timePicker: true,
                timePicker24Hour: true,
                locale: {
                    format: 'YYYY-MM-DD hh:mm',
                    firstDay: 1
                }
            });

///-----block do action modal-----1
        scanCode.focus();
        $('body').on('hidden.bs.modal', modalForm, function () {
            amtDisc.val('');
            amtDiscRiel.val('');
            amtReceived.val('');
            amtReceivedRiel.val('');
            amtReturn.val('');
            amtReturnRiel.val('');
            //descripitonTerm.val('');
            //$('form').trigger("reset");
            btnSubmit.attr('disabled', false);
            scanCode.focus();
            _dataTable.draw();
        });
        //modalForm.on('hidden.bs.modal', function (e) {
        //    //reloadProduct();
        //    amtDisc.val('');
        //    amtDiscRiel.val('');
        //    amtReceived.val('');
        //    amtReceivedRiel.val('');
        //    amtReturn.val('');
        //    amtReturnRiel.val('');
        //    //descripitonTerm.val('');
        //    //$('form').trigger("reset");
        //    btnSubmit.attr('disabled', false);
        //    scanCode.focus();
        //    _dataTable.draw();
        //});

        //modalForm.on('show.bs.modal', function (e) {
        //    getExchangeRate();
        //    alert('ok');
        //    amtReceived.focus();
        //});
        $('body').on('shown.bs.modal', modalForm, function () {
            getExchangeRate();
            amtReceived.focus();
        });

        modalKeep.on('hidden.bs.modal', function (e) {
            roomtableID.val(null).trigger('change');
            reloadKeep();
        });
///-----end do action modal-----/1
///-----block do sth-----2
        $("#PrdCategID").change(function () {
            var id = $(this).val();
            var products = "";
            $.ajax({
                type: "POST",
                url: "@Url.Action("GetProductForSale", "Product")",
                dataType: "json",
                data: { id: id },
                success: function (data) {
                    $.each(data, function (index, item) {
                        products += "<option value='" + item.Value + "'>" + item.Text + "</option>"
                    });
                    $("#ProductFilter").html(products)
                    //scanCode.focus();
                }
            });
        });
        $("#ScanCode").change(function () {
            var barCode = $(this).val();
            scanBarcode(barCode, customerId.val());
        });
        $("body").on('keypress', function (e) {
            if (e.which == 13 && scanCode.val() == '') {
                modalForm.modal('show');
            }
        });
        productFilter.on('change', function () {
            var productId = $("#ProductFilter option:selected").val();
            if (productFilter.val() == "") {
                return true;
            }
            addOrder(productId, customerId.val());
        });

        $(document).on('click', '#btnPlus', function () {
            if (productFilter.val() == "" || productFilter.val() == null) {
                return true;
            }
            addQuantity(1);
        });

        $(document).on('click', '#btnPlusOk', function () {
            if (productFilter.val() == "" || productFilter.val() == null) {
                return true;
            }
            _count = parseFloat(badgeCount.text());
            if (_count == 0) {
                return true;
            }
            addOrder(productFilter.val(), customerId.val(), _count);
        });
        $(document).on('click', '#btnSalePackage', function () {
            var packageId = Product_PackageID.val();
            var desc = Description.val();
            if (packageId == "" || packageId == null) {
                return true;
            }
            _count = Qty.val();
            if (_count == 0) {
                return true;
            }
            salePackage(packageId, customerId.val(), _count, false, desc);
        });

        amtDisc.change(function () {
            discount('dolar');
            receiveMoney();
        });
        amtDiscRiel.change(function () {
            discount('riel');
            receiveMoney();
        });

        amtReceived.change(function () {
            receiveMoney('dolar');
        });

        amtReceivedRiel.change(function () {
            receiveMoney('riel');
        });
        $('#formPayment').submit(function (e) {
            e.preventDefault();
            btnSubmit.attr('disabled', true);
            $.ajax({
                url: this.action,
                type: this.method,
                data: new FormData(this),
                cache: false,
                contentType: false,
                processData: false,
                success: function (res) {
                    if (res.status == 'True') {
                        modalForm.modal('hide');
                        _dataTable.draw();
                        var src = '@Url.Action("PdfExport", "Sale")?id=' + res.id;
                        let params = 'scrollbars=no,resizable=no,status=no,location=no,toolbar=no,menubar=no,width=' + screen.availWidth + ',height=' + screen.availHeight;
                        var w = window.open(src, "newWin", params);
                        w.onunload = function () {
                            if (!window.closed) {
                                scanCode.focus();
                            }
                        }
                    }
                    else {
                        btnSubmit.attr('disabled', false);
                        Swal.fire({
                            icon: 'error',
                            title: 'Oops...',
                            text: res.status
                        })
                    }
                },
                error: function (xhr, error, status) {
                    console.log(error, status);
                }
            });
        });
        $('#formKeep').submit(function (e) {
                e.preventDefault();// stop the standard form submission
                $.ajax({
                    url: this.action,
                    type: this.method,
                    data: new FormData(this),
                    cache: false,
                    contentType: false,
                    processData: false,
                    success: function (message) {
                        if (message == 'True') {
                            _dataTable.draw();
                            Toast.fire({
                                type: 'success',
                                title: 'Lorem ipsum dolor sit amet, consetetur sadipscing elitr.'
                            })
                    }
                        else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Oops...',
                                text: 'Something went wrong! ' + message
                            })
                        }
                    },
                    error: function (xhr, error, status) {
                        console.log(error, status);
                    }
                });
            });

        $(document).on('click', '#btnShow', function () {
            var data = {};
            data.roomtableID = roomtableID.val();
            if (data.roomtableID == '') {
                return true;
            }
            $.ajax({
                url: '@Url.Action("KeepIn", "Sales")',
                type: "POST",
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify(data),
                dataType: "json",
                success: function (message) {
                    if (message == 'True') {
                        _dataTable.draw();
                        Toast.fire({
                            type: 'success',
                            title: 'Lorem ipsum dolor sit amet, consetetur sadipscing elitr.'
                        })
                    }
                    else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Oops...',
                            text: 'Something went wrong! ' + message
                        })
                    }
                },
                error: function (xhr, error, status) {
                    console.log(error, status);
                }
            });
        });

        $(document).on('change', '.orderQty', function () {
            var orderDetailsID = $(this).data('id');
            var orderQty = $(this).val();
            if (isNaN(orderQty) || orderQty == '') {
                _dataTable.draw();
                return true;
            }
            updateOrder(orderDetailsID, orderQty, 'orderQty');
        });

        $(document).on('change', '.unitPrice', function () {
            var orderDetailsID = $(this).data('id');
            var unitPrice = $(this).val();
            if (isNaN(unitPrice) || unitPrice == '') {
                _dataTable.draw();
                return true;
            }
            updateOrder(orderDetailsID, unitPrice, 'unitPrice');
        });

        $(document).on('change', '.AmtDisc', function () {
            var orderDetailsID = $(this).data('id');
            var AmtDisc = $(this).val();
            if (isNaN(AmtDisc) || AmtDisc == '') {
                _dataTable.draw();
                return true;
            }
            updateOrder(orderDetailsID, AmtDisc, 'AmtDisc');
        });

        $(document).on('click', '.btnDelete', function () {
            var data = {};
            data.orderDetailsID = $(this).data('id');
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                type: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.value) {
                    $.ajax({
                        url: '@Url.Action("Delete", "Sale")',
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        data: JSON.stringify(data),
                        dataType: "json",
                        success: function (res) {
                            if (res == 'True') {
                                _dataTable.draw();
                                scanCode.focus();
                            }
                            else {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Oops...',
                                    text: res
                                })
                            }
                        },
                        error: function (res) {
                            if (message == 405) {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Oops...',
                                    text: 'You do not have access to do that.'
                                })
                            }
                        }
                    });
                }
            }).catch(Swal.noop);
        });
///-----end do sth-----/2
        ///-----block do fuction-----3
            function salePackage(productId, customerId, qty = 1, status = false, desc = '') {
                var data = {};
                    data.prdID = productId;
                    data.customerOrderID = customerId;
                    data.orderQty = qty;
                    data.status = status;
                    data.descripitonTerm = desc;
                    $.ajax({
                        url: '@Url.Action("SalePackage", "Sale")',
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        data: JSON.stringify(data),
                        dataType: "json",
                        processData: false,
                        success: function (res) {
                            if (res.status == 'No_Enough') {
                                Swal.fire({
                                    title: 'Are you sure?',
                                    text: res.message,
                                    type: 'warning',
                                    showCancelButton: true,
                                    confirmButtonColor: '#3085d6',
                                    cancelButtonColor: '#d33',
                                    confirmButtonText: 'Yes, sale it!'
                                }).then((result) => {
                                    if (result.value) {
                                        salePackage(productId, customerId, qty, true, desc);
                                    } else {
                                        _dataTable.draw();
                                        badgeCount.text('0');
                                        scanCode.focus();
                                    }
                                }).catch(Swal.noop);
                            }
                            else if (res.status == 'True') {
                                _dataTable.draw();
                                badgeCount.text('0');
                                scanCode.focus();
                            }
                            else {
                                $('#memberID').val(customerOrderID.val()).trigger('change');
                                badgeCount.text('0');
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Oops...',
                                    text: res.message
                                });
                            }
                        },
                        error: function (xhr, error, status) {
                            console.log(error, status);
                        }
                    });
            }
            function scanBarcode(barCode, customerId, qty = 1, status = false) {
                var data = {};
                data.barCode = barCode;
                data.customerOrderID = customerId;
                data.orderQty = qty;
                data.status = status;
                $.ajax({
                    url: '@Url.Action("ScanBarcode", "Sale")',
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify(data),
                    dataType: "json",
                    processData: false,
                    success: function (res) {
                        if (res.status == 'No_Enough') {
                            Swal.fire({
                                title: 'Are you sure?',
                                text: res.message,
                                type: 'warning',
                                showCancelButton: true,
                                confirmButtonColor: '#3085d6',
                                cancelButtonColor: '#d33',
                                confirmButtonText: 'Yes, sale it!'
                            }).then((result) => {
                                if (result.value) {
                                    scanBarcode(barCode, customerId, qty, true)
                                } else {
                                    scanCode.val('').focus();
                                }
                            }).catch(Swal.noop);
                        }
                        else if (res.status == 'True') {
                            _dataTable.draw();
                            badgeCount.text('0');
                            scanCode.val('').focus();
                        }
                        else {
                            scanCode.val('').focus();
                            Swal.fire({
                                icon: 'error',
                                title: 'Barcode',
                                text: res.message
                            })
                        }
                    },
                    error: function (xhr, error, status) {
                        console.log(error, status);
                    }
                });
            }
            function addOrder(productId, customerId, qty = 1, status = false) {
                var data = {};
                data.prdID = productId;
                data.customerOrderID = customerId;
                data.orderQty = qty;
                data.status = status;
                $.ajax({
                    url: '@Url.Action("AddOrder", "Sale")',
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify(data),
                    dataType: "json",
                    processData: false,
                    success: function (res) {
                        if (res.status == 'No_Enough') {
                            Swal.fire({
                                title: 'Are you sure?',
                                text: res.message,
                                type: 'warning',
                                showCancelButton: true,
                                confirmButtonColor: '#3085d6',
                                cancelButtonColor: '#d33',
                                confirmButtonText: 'Yes, sale it!'
                            }).then((result) => {
                                if (result.value) {
                                    addOrder(productId, customerId, qty, true);
                                } else {
                                    _dataTable.draw();
                                    badgeCount.text('0');
                                    scanCode.focus();
                                }
                            }).catch(Swal.noop);
                        }
                        else if (res.status == 'True') {
                            _dataTable.draw();
                            badgeCount.text('0');
                            scanCode.focus();
                        }
                        else {
                            $('#memberID').val(customerOrderID.val()).trigger('change');
                            badgeCount.text('0');
                            Swal.fire({
                                icon: 'error',
                                title: 'Oops...',
                                text: res.message
                            });
                        }
                    },
                    error: function (xhr, error, status) {
                        console.log(error, status);
                    }
                });
            }

            function updateOrder(id, val, type, status = false) {
                var data = {};
                data.prdID = id;
                data.Val = val;
                data.Type = type;
                data.status = status;
                $.ajax({
                    url: '@Url.Action("UpdateOrder", "Sale")',
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify(data),
                    dataType: "json",
                    processData: false,
                    success: function (res) {
                        if (res.status == 'No_Enough') {
                            Swal.fire({
                                title: 'Are you sure?',
                                text: res.message,
                                type: 'warning',
                                showCancelButton: true,
                                confirmButtonColor: '#3085d6',
                                cancelButtonColor: '#d33',
                                confirmButtonText: 'Yes, sale it!'
                            }).then((result) => {
                                if (result.value) {
                                    updateOrder(id, val, type, true)
                                } else {
                                    _dataTable.draw();
                                    badgeCount.text('0');
                                    scanCode.focus();
                                }
                            }).catch(Swal.noop);
                        }
                        else if (res.status == 'True') {
                            _dataTable.draw();
                            badgeCount.text('0');
                            scanCode.focus();
                        }
                        else {
                            $('#memberID').val(customerOrderID.val()).trigger('change');
                            badgeCount.text('0');
                            Swal.fire({
                                icon: 'error',
                                title: 'Oops...',
                                text: res.message
                            });
                        }
                    },
                    error: function (xhr, error, status) {
                        console.log(error, status);
                    }
                });
            }

            function addQuantity(val) {
                    _count = parseFloat(badgeCount.text());
                    _count = _count + val;
                    badgeCount.text(_count);
                }

            function getExchangeRate() {
                $.ajax({
                    url: '@Url.Action("GetExchangeRate", "ExchangeRate")',
                    type: "GET",
                    async: true,
                    contentType: "application/json; charset=utf-8",
                    //data: JSON.stringify(data),
                    dataType: "json",
                    success: function (res) {
                        //customerOrderID.val(customerId.val());
                        usdTokhr.val(res.usdTokhr);
                        usdToKhrChange.val(res.usdToKhrChange);
                        usdToTHB.val(res.usdToTHB);

                        _totalAmountRiel = totalAmount.val() * res.usdTokhr;
                        _totalAmountRiel = round(_totalAmountRiel, -2);
                        totalAmountRiel.val(_totalAmountRiel);
                        netAmountRiel.val(_totalAmountRiel);
                        amtOwedRiel.val(_totalAmountRiel);
                    },
                    error: function (message) {
                        if (message == 405) {
                            Swal.fire({
                                icon: 'error',
                                title: 'Oops...',
                                text: 'You do not have access to do that.'
                            })
                        }
                    }
                });
            }

            function discount(val) {
                if (val == 'dolar') {
                    _amtDisc = parseFloat(amtDisc.val());
                    _amtDiscRiel = _amtDisc * usdTokhr.val();
                    amtDiscRiel.val(round(_amtDiscRiel,-2));

                    _netAmount = parseFloat(totalAmount.val()) - _amtDisc;
                    netAmount.val(round(_netAmount, 2));

                    _netAmount = _netAmount * usdTokhr.val();
                    netAmountRiel.val(round(_netAmount, -2));

                    return true;
                }

                _amtDiscRiel = parseFloat(amtDiscRiel.val());
                _amtDisc = _amtDiscRiel / usdTokhr.val();
                amtDisc.val(round(_amtDisc, 2));

                _netAmount = parseFloat(totalAmount.val()) - _amtDisc;
                netAmount.val(round(_netAmount, 2));

                _netAmount = _netAmount * usdTokhr.val();
                netAmountRiel.val(round(_netAmount, -2));
            }

            function receiveMoney(val) {
                if (val == 'dolar') {
                    _amtReceivedRiel = parseFloat(amtReceivedRiel.val());
                    _netAmountRiel = parseFloat(netAmountRiel.val());
                    if (_amtReceivedRiel >= _netAmountRiel) {
                        amtReceived.val(0);
                    }
                    returnOrOweMoney();
                    return true;
                }
                _amtReceived = parseFloat(amtReceived.val());
                _netAmount = parseFloat(netAmount.val());
                if (_amtReceived >= _netAmount) {
                    amtReceivedRiel.val(0);
                }
                returnOrOweMoney();
            }

            function returnOrOweMoney() {
                _amtReceivedRiel = amtReceivedRiel.val();
                if (_amtReceivedRiel == '') {
                    _amtReceivedRiel = 0;
                    amtReceivedRiel.val(0);
                }
                _amtReceivedRiel = parseFloat(_amtReceivedRiel) / usdTokhr.val();

                _amtReceived = amtReceived.val();
                if (_amtReceived == '') {
                    _amtReceived = 0;
                    amtReceived.val(0);
                }
                _amtReceived = parseFloat(_amtReceived) + _amtReceivedRiel;

                _netAmount = parseFloat(netAmount.val());
                _amtReturn = _amtReceived - _netAmount;
    //////////set return money-----------------------
                if (_amtReturn > 0) {
                    amtReturn.val(round(_amtReturn, 2));
                    _amtReturnRiel = _amtReturn * usdToKhrChange.val();
                    amtReturnRiel.val(round(_amtReturnRiel, -2));

                    amtOwed.val(0);
                    amtOwedRiel.val(0);
                    return true;
                }
    /////////set owed money---------------------------
                _amtOwed = _netAmount - _amtReceived;
                _amtOwedRiel = _amtOwed * usdTokhr.val();
                amtOwed.val(round(_amtOwed, 2));
                amtOwedRiel.val(round(_amtOwedRiel, -2));

                amtReturn.val(0);
                amtReturnRiel.val(0);
            }

            function reloadProduct() {
                var subItems="";
                $.getJSON("@Url.Action("ReloadProduct", "Sale")", { id: 1 }, function (data) {
                    subItems += "<option value='" + '' +"'>" + 'ស្វែងរក...' + "</option>";
                  $.each(data,function(index,item){
                      subItems += "<option value='" + item.ProductID + "'>" + item.OrderComment + "</option>";
                  });
                    productFilter.html(subItems)
                });
            }

            function reloadKeep() {
                var subItems="";
                $.getJSON("@Url.Action("ReloadKeep", "Sale")", { id: 1 }, function (data) {
                    subItems += "<option value='" + '' +"'>" + '--Select--' + "</option>";
                  $.each(data,function(index,item){
                      subItems += "<option value='" + item.roomtableID + "'>" + item.CustomerName + "</option>";
                  });
                    roomtableID.html(subItems)
                });
            }
///-----end do fuction-----/3
///-----block datatable-----4
    var _dataTable = $('.data-table')
        .DataTable({
            sAjaxSource: '@Url.Action("GetData", "Sale")',
            bServerSide: true,
            pageLength: 100,
            bProcessing: true,
            lengthChange: false,
            searching: false,
            sAutoWidth: false,
            bDestroy: true,
            sDom: 'ft',
            //bPaginate: false, //#hide pagination control
            //bFilter: false, //#hide filter control
            //"sPaginationType": "bootstrap", // full_numbers
            //"iDisplayStart ": 10,
            //"iDisplayLength": 10,
            //"bPaginate": false, //hide pagination
            //"bFilter": false, //hide Search bar
            //"bInfo": false, // hide showing entries
            columns: [
                {
                    data: null, "sortable": false,
                    render: function (data, type, row, meta) {
                        return meta.row + meta.settings._iDisplayStart + 1;
                    }
                },
                { data: "PrdNameEng", autoWidth: true, searchable: true },
                { data: "unitType", searchable: true },
                {
                    data: "orderQty",
                    render: function (data, type, full, meta) {
                        return '<input type="text" data-id="' + full.prdID + '" class="orderQty textbox-grid" value="' + data + '">';
                    }
                },
                {
                    data: "unitPrice",
                    render: function (data, type, full, meta) {
                        return '<input type="text" data-id="' + full.prdID + '" class="unitPrice textbox-grid" value="' + data + '">';
                    }
                },
                {
                    data: "AmtDisc",
                    render: function (data, type, full, meta) {
                        return '<input type="text" data-id="' + full.prdID + '" class="AmtDisc textbox-grid" value="' + data + '">';
                    }
                },
                { data: "totalAmt", searchable: true, render: $.fn.dataTable.render.number(',', '.', 2, '') },
                {
                    data: "orderDetailsID",
                    sortable: false,
                    render: function (data, type, full, meta) {
                        //var actions = '<button type="button" data-id="' + data + '" class="btn btnDelete btn-sm btn-danger mx-1"><i class="fa fa-times-circle"></i></button>';
                            //actions += '<button type="button" data-id="' + data + '" class="btn btnEdit btn-sm btn-primary mx-1" > <i class="fa fa-edit"></i></a >';
                       return '<i data-id="' + data + '" class="fa fa-times-circle text-danger m-1 btnDelete"></i>';
                        //return '<button type="button" data-id="' + data + '" class="btn btnDelete btn-sm btn-danger mx-1"><i class="fa fa-times-circle"></i></button>';
                    }
                },
                { data: "customerOrderID", searchable: false }
            ],
            columnDefs: [
                {
                    "targets": [8],
                    "visible": false,
                    "searchable": false
                }],
            footerCallback: function (row, data, start, end, display) {
                var api = this.api(), data;
                // Remove the formatting to get integer data for summation
                var intVal = function (i) {
                    return typeof i === 'string' ?
                        i.replace(/[\$,]/g, '') * 1 :
                        typeof i === 'number' ?
                            i : 0;
                };

                // Total over all pages

                totalAmt = api
                    .column(6)
                    .data()
                    .reduce(function (a, b) {
                        return intVal(a) + intVal(b);
                    }, 0);

                customerID = api
                    .column(8)
                    .data()
                    .reduce(function (a, b) {
                        return intVal(b);
                    }, 0);

                $(api.column(6).footer()).html(
                    '$' + totalAmt.toFixed(2),
                    totalAmount.val(totalAmt.toFixed(2)),
                    netAmount.val(totalAmt.toFixed(2)),
                    amtOwed.val(totalAmt.toFixed(2)),
                );

                $(api.column(8).footer()).html(
                    customerID,
                    customerOrderID.val(customerID).trigger('change'),
                    //if (PrdCategID.find("option[value='" + res.PrdCategID + "']").length) {
                    //    PrdCategID.val(res.PrdCategID).trigger('change');
                    //},
                    //.val(customerID),
                );
            }
        });
///-----end datatable-----/4
    });
    </script>
}



