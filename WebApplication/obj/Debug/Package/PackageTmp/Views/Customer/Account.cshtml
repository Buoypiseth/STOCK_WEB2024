@section Styles {
    <link href="~/assets/plugins/select2/css/select2.min.css" rel="stylesheet">
    <link href="~/assets/plugins/select2-bootstrap4-theme/select2-bootstrap4.min.css" rel="stylesheet">
    <link href="~/assets/plugins/datatables-bs4/css/dataTables.bootstrap4.css" rel="stylesheet" />
    <link href="~/assets/plugins/datatables-responsive/css/responsive.bootstrap4.css" rel="stylesheet">
    <link href="~/assets/plugins/sweetalert2/dist/sweetalert2.min.css" rel="stylesheet" />
    <link href="~/assets/plugins/toastr/toastr.min.css" rel="stylesheet" />
    <link href="~/assets/plugins/icheck-bootstrap/icheck-bootstrap.min.css" rel="stylesheet">
    <link href="~/assets/plugins/daterangepicker/daterangepicker.css" rel="stylesheet">
}
<div class="card">
    <div class="card-header">
        <div class="d-flex justify-content-between">
            <h5 class="card-title align-self-center">
                @Resources.Customer.Account
            </h5>
            <div>
                <button type="button" class="btn btn-min btn-primary" data-toggle="modal" data-target="#modal-form">
                    <i class="fa fa-plus-circle"></i>
                    @Resources.Buttons.Create
                </button>
            </div>
        </div>
    </div>
    <div class="card-body">
        @*modal create customer account type*@
        @Html.Partial("Partials/_AccountType")
        @*modal edit customer account type*@
        @Html.Partial("Partials/_EditAccountType")
        @*modal add deposited*@
        @Html.Partial("Partials/_Deposited")
        @*modal add cashouts*@
        @Html.Partial("Partials/_Cashouts")

        <h4>@Resources.Customer.Account: <u> @ViewBag.CustName </u> </h4>

        <div class="row">
            <div class="col-sm-12">
                <table class="table table-hover data-table dt-responsive nowrap" style="width: 100%">
                    <thead>
                        <tr>
                            <th>@Resources.Globle.No</th>
                            <th>@Resources.Customer.AccountType</th>
                            <th>@Resources.Customer.Amount</th>
                            <th>@Resources.Customer.RealMoneyRemain</th>
                            <th>@Resources.Customer.DateExpire</th>
                            <th>@Resources.Customer.LimitePay1Time</th>
                            <th>@Resources.Customer.Active</th>
                            <th>@Resources.Globle.Actions</th>
                        </tr>
                    </thead>
                </table>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script src="~/assets/plugins/datatables/jquery.dataTables.js"></script>
    <script src="~/assets/plugins/select2/js/select2.full.min.js"></script>
    <script src="~/assets/plugins/datatables-bs4/js/dataTables.bootstrap4.js"></script>
    <script src="~/assets/plugins/datatables-responsive/js/dataTables.responsive.js"></script>
    <script src="~/assets/plugins/datatables-responsive/js/responsive.bootstrap4.js"></script>
    <script src="~/assets/plugins/sweetalert2/dist/sweetalert2.min.js"></script>
    <script src="~/assets/plugins/toastr/toastr.min.js"></script>
    <script src="~/assets/plugins/bs-custom-file-input/bs-custom-file-input.min.js"></script>
    <script src="~/assets/plugins/moment/moment.min.js"></script>
    <script src="~/assets/plugins/daterangepicker/daterangepicker.js"></script>

    <script type="text/javascript">
        var modalForm = $('#modal-form');
        var btnSaveOrUpdate = $('#btnSaveOrUpdate');
        var modalTitle = $('#modal-title');

        var modalDeposited = $('#modal-deposited');
        var modalCashouts = $('#modal-cashouts');
        var modalEdit = $('#modal-edit');
        //variable form
        var memberID = $('#memberID');
        var AccountType = $('#AccountType');
        var DateExpire = $('#DateExpire');
        var LimitePay1Day = $('#LimitePay1Day');
        var Description = $('#Description');
        $(function () {
            $('.select2bs4').select2({
                theme: 'bootstrap4',
            });
            $('.singledatepicker').daterangepicker({
                opens: 'right',
                drops: 'down',
                singleDatePicker: true,
                showDropdowns: true,
                minYear: 2000,
                maxYear: parseInt(moment().format('YYYY'), 10),
                locale: {
                    format: 'YYYY-MM-DD',
                    firstDay: 1,
                }
            });
            $('.singledatetimepicker').daterangepicker({
                opens: 'right',
                drops: 'down',
                singleDatePicker: true,
                showDropdowns: true,
                minYear: 2000,
                maxYear: parseInt(moment().format('YYYY'), 10),
                timePicker: true,
                timePicker24Hour: true,
                locale: {
                    format: 'YYYY-MM-DD hh:mm',
                    firstDay: 1
                }
            });

            // create customer account type
            modalForm.on('hidden.bs.modal', function (e) {
                modalTitle.text('').append('Create');
                btnSaveOrUpdate.text('').append('<i class="far fa-check-circle"></i> Save');
            });

            $('#frmCreate').submit(function (e) {
                e.preventDefault();
                $.ajax({
                    url: this.action,
                    type: this.method,
                    data: new FormData(this),
                    cache: false,
                    contentType: false,
                    processData: false,
                    success: function (res) {
                        if (res == 'True') {
                            //dataTable.draw();
                            modalForm.modal('hide');
                            location.reload();
                        }
                        else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Oops...',
                                text: res
                            })
                        }
                    },
                    error: function (xhr, error, status) {
                        console.log(error, status);
                    }
                });
            });

            // popup modal edit
            $(document).on('click', '.btnEdit', function () {
                 var data = {};
                data.CustomerAccountID = $(this).data('id');
                $.ajax({
                    url: '@Url.Action("getAccount", "Customer")',
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify(data),
                    dataType: "json",
                    success: function (res) {
                        $('#setCustomerAccountID').val(res.CustomerAccountID);
                        $('#setDateExpire').val(moment(res.DateExpire).format('YYYY-MM-DD'));
                        $('#setLimitePay1Time').val(res.LimitePay1Time);
                        $('#setDescription').val(res.Description);
                        $('#IsActive').prop("checked", res.IsActive);
                    }
                });

                modalEdit.modal('show');
            });

            $('#frmEdit').submit(function (e) {
                e.preventDefault();
                $.ajax({
                    url: this.action,
                    type: this.method,
                    data: new FormData(this),
                    cache: false,
                    contentType: false,
                    processData: false,
                    success: function (res) {
                        if (res == 'True') {
                            //dataTable.draw();
                            modalEdit.modal('hide');
                            location.reload();
                        }
                        else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Oops...',
                                text: res
                            })
                        }
                    },
                    error: function (xhr, error, status) {
                        console.log(error, status);
                    }
                });
            });

            // add deposited
            $(document).on('click','.btnDeposited',function () {
                var id = $(this).data('id');
                $('#CustomerAccountID').val(id);
                modalDeposited.modal('show');
            });

            $('#frmDeposited').submit(function (e) {
                e.preventDefault();
                $.ajax({
                    url: this.action,
                    type: this.method,
                    data: new FormData(this),
                    cache: false,
                    contentType: false,
                    processData: false,
                    success: function (res) {
                        if (res == 'True') {
                            //dataTable.draw();
                            modalDeposited.modal('hide');
                            location.reload();
                        }
                        else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Oops...',
                                text: res
                            })
                        }
                    },
                    error: function (xhr, error, status) {
                        console.log(error, status);
                    }
                });
            });

            // add cashouts
            $(document).on('click', '.btnCashouts', function () {
                var id = $(this).data('id');
                $('#CustomerAccountIDCashouts').val(id);
                modalCashouts.modal('show');
            });

            $('#frmCashouts').submit(function (e) {
                e.preventDefault();
                $.ajax({
                    url: this.action,
                    type: this.method,
                    data: new FormData(this),
                    cache: false,
                    contentType: false,
                    processData: false,
                    success: function (res) {
                        if (res == 'True') {
                            //dataTable.draw();
                            modalCashouts.modal('hide');
                            location.reload();
                        }
                        else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Oops...',
                                text: res
                            })
                        }
                    },
                    error: function (xhr, error, status) {
                        console.log(error, status);
                    }
                });
            });

            var dataTable = $('.data-table')
                .DataTable({
                    "sAjaxSource": '@Url.Action("GetDataAccount", "Customer")',
                    "fnServerParams": function (aoData) {
                        aoData.push({ "name": "custId", "value": @ViewBag.CustId });
                    },
                    "bServerSide": true,
                    "pageLength": 25,
                    "bProcessing": true,
                    "bSearchable": true,
                    "columns": [
                        {
                            "data": null, "sortable": false,
                            "render": function (data, type, row, meta) {
                                return meta.row + meta.settings._iDisplayStart + 1;
                            }
                        },
                        { "data": "AccountType", "sortable": true },
                        { "data": "Amount", "sortable": false, render: $.fn.dataTable.render.number(',', '.', 2, '') },
                        { "data": "RealMoneyRemain", "sortable": false, render: $.fn.dataTable.render.number(',', '.', 2, '') },
                        { "data": "DateExpire", "sortable": false },
                        { "data": "LimitePay1Time", "sortable": false },
                        { "data": "IsActive", "sortable": false },
                        {
                            "data": "CustomerAccountID",
                            "sortable": false,
                            "render": function (data, type, full, meta) {
                                var actions = '<button type="button" data-id="' + data + '" class="btn btnEdit btn-sm btn-primary mx-1">Edit</button>';
                                actions += '<button type="button" data-id="' + data + '" class="btn btnCashouts btn-sm btn-secondary mx-1">Cashouts</button>';
                                actions += '<button type="button" data-id="' + data + '" class="btn btnDeposited btn-sm btn-success mx-1">Deposited</button>';
                                return actions;
                            }
                        }
                    ],
                    columnDefs: [
                        {
                            targets: [4],
                            render: function (data, type, row, meta) {
                                return moment(data).format('YYYY-MM-DD');
                            }
                        }
                    ],
                });
            });
    </script>
}

