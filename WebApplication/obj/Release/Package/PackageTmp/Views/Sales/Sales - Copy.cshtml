@{
    Layout = "~/Views/Shared/_Layout01.cshtml";
}
@model WebApplication.Models.PurchaseModel
@section Styles {
    <link href="~/assets/plugins/select2/css/select2.min.css" rel="stylesheet">
    <link href="~/assets/plugins/select2-bootstrap4-theme/select2-bootstrap4.min.css" rel="stylesheet">
    <link href="~/assets/plugins/datatables-bs4/css/dataTables.bootstrap4.css" rel="stylesheet" />
    <link href="~/assets/plugins/datatables-responsive/css/responsive.bootstrap4.css" rel="stylesheet">
    <link href="~/assets/plugins/sweetalert2/sweetalert2.min.css" rel="stylesheet" />
    <link href="~/assets/plugins/toastr/toastr.min.css" rel="stylesheet" />
    <link href="~/assets/plugins/daterangepicker/daterangepicker.css" rel="stylesheet">
    <link rel="stylesheet" href="~/assets/plugins/icheck-bootstrap/icheck-bootstrap.min.css">
}

@Html.Partial("Partials/_SaleHead")

@{
    if (ViewBag.InvoiceID > 0)
    {
        @Html.Partial("Partials/_PaymentReturn")
    }
    else
    {
        @Html.Partial("Partials/_Payment")
    }
}

@Html.Partial("Partials/_CreateOrShowKeep")
<div class="row">
    <div class="col-sm-12">
        <table class="table table-sm table-hover data-table dt-responsive nowrap" style="width:100%">
            <thead style="background-color: #969696; color: #fff">
                <tr>
                    <th>ល.រ</th>
                    <th>ផលិតផល</th>
                    <th>គិតជា</th>
                    <th>ចំនួន</th>
                    <th>តម្លៃឯកតា($)</th>
                    <th>បញ្ចុះតម្លៃ($)</th>
                    <th>តម្លៃសរុប($)</th>
                    <th>លុប</th>
                    <th>cid</th>
                </tr>
            </thead>
            <tbody>
            </tbody>
            <tfoot>
                <tr>
                    <th colspan="6">Total</th>
                    <th colspan="2"></th>
                    <th></th>
                </tr>
            </tfoot>
        </table>
    </div>
</div>
@section Scripts {
    <script src="~/assets/plugins/datatables/jquery.dataTables.js"></script>
    <script src="~/assets/plugins/datatables-bs4/js/dataTables.bootstrap4.js"></script>
    <script src="~/assets/plugins/datatables-responsive/js/dataTables.responsive.js"></script>
    <script src="~/assets/plugins/datatables-responsive/js/responsive.bootstrap4.js"></script>
    <script src="~/assets/plugins/select2/js/select2.full.min.js"></script>
    <script src="~/assets/plugins/sweetalert2/sweetalert2.min.js"></script>
    <script src="~/assets/plugins/sweetalert2/sweetalert2@9-sweetaler2.min.js"></script>
    <script src="~/assets/plugins/toastr/toastr.min.js"></script>
    <script src="~/assets/plugins/moment/moment.min.js"></script>
    <script src="~/assets/plugins/daterangepicker/daterangepicker.js"></script>

    <script type="text/javascript">
        var modalForm = $('#modal-form');
        var modalKeep = $('#modal-keep');

        ///////declare variable get attributes-----
        var customerId = $('#memberID');
        var productFilter = $('#ProductFilter');
        var badgeCount = $('#badge-count');

        ////variable form payment----------------------
        var totalAmount = $('#totalAmount');
        var amtDisc = $('#AmtDisc');
        var amtDiscRiel = $('#AmtDiscRiel');
        var netAmount = $('#netAmount');
        var amtReceived = $('#amtReceived');
        var amtReturn = $('#amtReturn');
        var amtOwed = $('#amtOwed');

        var totalAmountRiel = $('#totalAmountRiel');
        var percentDiscountRiel = $('#percentDiscountRiel');
        var netAmountRiel = $('#netAmountRiel');
        var amtReceivedRiel = $('#amtReceivedRiel');
        var amtReturnRiel = $('#amtReturnRiel');
        var amtOwedRiel = $('#amtOwedRiel');

        var returnDate = $('#ReturnDate');
        //var orderDate = $('#orderDate');
        var descripitonTerm = $('#DescripitonTerm');

        var customerOrderID = $('#customerOrderID');
        var usdTokhr = $('#usdTokhr');
        var usdToKhrChange = $('#usdToKhrChange');
        var usdToTHB = $('#usdToTHB');
        var roomtableID = $('#roomtableID');

        ////-------------class--------------
        //var orderQty = $('.orderQty');

        ///////declare variable -----------------
        var _grandTotal = 0;
        var _amtLoan = 0;
        var _amtPay = 0;
        var _count = 0;

        var _totalAmount = 0;
        var _totalAmountRiel = 0;

        var _amtDisc = 0;
        var _amtDiscRiel = 0;

        var _netAmount = 0;
        var _netAmountRiel = 0;

        var _amtReceived = 0;
        var _amtReceivedRiel = 0;

        var _amtReturn = 0
        var _amtReturnRiel = 0

        var _amtOwed = 0;
        var _amtOwedRiel = 0;

        var totalAmountOld = $('#totalAmountOld');
        var totalAmountRielOld = $('#totalAmountRielOld');
        var netAmountReturn = $('#netAmountReturn');
        var netAmountReturnRiel = $('#netAmountReturnRiel');

        var _msg = @ViewBag.Msg;
        var _totalAmountRielOld = @ViewBag.totalAmountRielOld;
        var _netAmountReturnRiel = @ViewBag.netAmountReturnRiel;

        $(function () {
            const Toast = Swal.mixin({
                toast: true,
                position: 'top-end',
                showConfirmButton: false,
                timer: 3000
            });

            if (_msg == 1) {
                //Toast.fire({
                //    type: 'success',
                //    title: 'After return success you can order item.',
                //});

                totalAmountRielOld.val(round(_totalAmountRielOld, -2));
                netAmountReturnRiel.val(round(_netAmountReturnRiel, -2));
                Swal.fire({
                    icon: 'success',
                    title: 'Success',
                    text: 'After return success. you can order item.',
                })
            }

            $('.select2').select2();
            //Initialize Select2 Elements
            $('.select2bs4').select2({
                theme: 'bootstrap4',
            });

            $('.singledatepicker').daterangepicker({
                opens: 'right',
                drops: 'down',
                singleDatePicker: true,
                showDropdowns: true,
                minYear: 2000,
                maxYear: parseInt(moment().format('YYYY'), 10),
                locale: {
                    format: 'YYYY-MM-DD',
                    firstDay: 1
                }
            });

            $('.singledatetimepicker').daterangepicker({
                opens: 'right',
                drops: 'down',
                singleDatePicker: true,
                showDropdowns: true,
                minYear: 2000,
                maxYear: parseInt(moment().format('YYYY'), 10),
                timePicker: true,
                timePicker24Hour: true,
                locale: {
                    format: 'YYYY-MM-DD hh:mm',
                    firstDay: 1
                }
            });

/////////call order product--------------------------------
        productFilter.on('change', function () {
            var productId = $("#ProductFilter option:selected").val();
            if (productFilter.val() == "") {
                return true;
            }
            addOrder(productId, customerId.val());
        });

        $(document).on('click', '#btnPlus', function () {
            if (productFilter.val() == "") {
                return true;
            }
            addQuantity(1);
        });

        $(document).on('click', '#btnPlusOk', function () {
            _count = parseFloat(badgeCount.text());
            if (_count == 0) {
                return true;
            }
            addOrder(productFilter.val(), customerId.val(), _count);
        });

        amtDisc.change(function () {
            discount('dolar');
            receiveMoney();
        });
        amtDiscRiel.change(function () {
            discount('riel');
            receiveMoney();
        });

        amtReceived.change(function () {
            receiveMoney('dolar');
        });
        amtReceivedRiel.change(function () {
            receiveMoney('riel');
        });

////////action modal-----------------------------------
        modalForm.on('hidden.bs.modal', function (e) {
            _dataTable.draw();
            reloadProduct();
            amtDisc.val('');
            amtDiscRiel.val('');

            amtReceived.val('');
            amtReceivedRiel.val('');

            amtReturn.val('');
            amtReturnRiel.val('');
            descripitonTerm.val('');
        });

        modalForm.on('show.bs.modal', function (e) {
            getExchangeRate();
        });

        modalKeep.on('hidden.bs.modal', function (e) {
            roomtableID.val(null).trigger('change');
            reloadKeep();
        });

        //orderQty.on('change', function () {
        //    var _orderQty = $(this).val();
        //    console.log(_orderQty);
        //});


////////save payment--------------------------------------
        $('#formPayment').submit(function (e) {
            //alert('ok');
            modalForm.modal('hide');
            e.preventDefault();// stop the standard form submission
            $.ajax({
                url: this.action,
                type: this.method,
                data: new FormData(this),
                cache: false,
                contentType: false,
                processData: false,
                success: function (message) {
                    if (message == 'True') {
                        _dataTable.draw();
                        Toast.fire({
                            type: 'success',
                            title: 'Lorem ipsum dolor sit amet, consetetur sadipscing elitr.'
                        })
                        @*var win = window.open('@Url.Action("print", "Sales", new { id = 2 })', '_blank');
                        win.focus();*@
                    }
                    else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Oops...',
                            text: 'Something went wrong! ' + message
                        })
                    }
                },
                error: function (xhr, error, status) {
                    console.log(error, status);
                }
            });
        });

            $('#formKeep').submit(function (e) {
                e.preventDefault();// stop the standard form submission
                $.ajax({
                    url: this.action,
                    type: this.method,
                    data: new FormData(this),
                    cache: false,
                    contentType: false,
                    processData: false,
                    success: function (message) {
                        if (message == 'True') {
                            _dataTable.draw();
                            Toast.fire({
                                type: 'success',
                                title: 'Lorem ipsum dolor sit amet, consetetur sadipscing elitr.'
                            })
                    }
                        else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Oops...',
                                text: 'Something went wrong! ' + message
                            })
                        }
                    },
                    error: function (xhr, error, status) {
                        console.log(error, status);
                    }
                });
            });

        $(document).on('click', '#btnShow', function () {
            var data = {};
            data.roomtableID = roomtableID.val();
            if (data.roomtableID == '') {
                return true;
            }
            $.ajax({
                url: '@Url.Action("KeepIn", "Sales")',
                type: "POST",
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify(data),
                dataType: "json",
                success: function (message) {
                    if (message == 'True') {
                        _dataTable.draw();
                        Toast.fire({
                            type: 'success',
                            title: 'Lorem ipsum dolor sit amet, consetetur sadipscing elitr.'
                        })
                    }
                    else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Oops...',
                            text: 'Something went wrong! ' + message
                        })
                    }
                },
                error: function (xhr, error, status) {
                    console.log(error, status);
                }
            });
        });
/////////delete order--------------------------------------
        $(document).on('click', '.btnDelete', function () {
            var data = {};
            data.orderDetailsID = $(this).data('id');
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                type: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.value) {
                    $.ajax({
                        url: '@Url.Action("Delete", "Sales")',
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        data: JSON.stringify(data),
                        dataType: "json",
                        success: function (message) {
                            if (message == 'True') {
                                _dataTable.draw();
                                Toast.fire({
                                    type: 'success',
                                    title: 'Lorem ipsum dolor sit amet, consetetur sadipscing elitr.'
                                })
                            }
                            else {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Oops...',
                                    text: 'Something went wrong! //' + message
                                })
                            }
                        },
                        error: function (message) {
                            if (message == 405) {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Oops...',
                                    text: 'You do not have access to do that.'
                                })
                            }
                        }
                    });
                }
            }).catch(Swal.noop);
        });

///////write function-------------------------------------
            function addOrder(productId, customerId, qty = 1) {
                var data = {};
                data.prdID = productId;
                data.customerOrderID = customerId;
                data.orderQty = qty;
                $.ajax({
                    url: '@Url.Action("AddOrder", "Sales")',
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify(data),
                    dataType: "json",
                    processData: false,
                    success: function (message) {
                        if (message == 'True') {
                            _dataTable.draw();
                            badgeCount.text('0');
                            Toast.fire({
                                type: 'success',
                                title: 'Lorem ipsum dolor sit amet, consetetur sadipscing elitr.'
                            })
                        }
                        else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Oops...',
                                text: 'Something went wrong! ' + message
                            })
                        }
                    },
                    error: function (xhr, error, status) {
                        console.log(error, status);
                    }
                });
            }

            $(document).on('change', '.orderQty', function () {
                var orderDetailsID = $(this).data('id');
                var orderQty = $(this).val();
                if (isNaN(orderQty) || orderQty == '') {
                    _dataTable.draw();
                    return true;
                }
                updateOrder(orderDetailsID, orderQty, 'orderQty');
            });
            $(document).on('change', '.unitPrice', function () {
                var orderDetailsID = $(this).data('id');
                var unitPrice = $(this).val();
                if (isNaN(unitPrice) || unitPrice == '') {
                    _dataTable.draw();
                    return true;
                }
                updateOrder(orderDetailsID, unitPrice, 'unitPrice');
            });
            $(document).on('change', '.AmtDisc', function () {
                var orderDetailsID = $(this).data('id');
                var AmtDisc = $(this).val();
                if (isNaN(AmtDisc) || AmtDisc == '') {
                    _dataTable.draw();
                    return true;
                }
                updateOrder(orderDetailsID, AmtDisc, 'AmtDisc');
            });

            function updateOrder(id, val, type) {
                var data = {};
                data.orderDetailsID = id;
                data.Val = val;
                data.Type = type;
                $.ajax({
                    url: '@Url.Action("UpdateOrder", "Sales")',
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    data: JSON.stringify(data),
                    dataType: "json",
                    processData: false,
                    success: function (message) {
                        if (message == 'True') {
                            _dataTable.draw();
                            //badgeCount.text('0');
                            Toast.fire({
                                type: 'success',
                                title: 'Lorem ipsum dolor sit amet, consetetur sadipscing elitr.'
                            })
                        }
                        else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Oops...',
                                text: 'Something went wrong! ' + message
                            })
                        }
                    },
                    error: function (xhr, error, status) {
                        console.log(error, status);
                    }
                });
            }

            function addQuantity(val) {
                    _count = parseFloat(badgeCount.text());
                    _count = _count + val;
                    badgeCount.text(_count);
                }

            function getExchangeRate() {
                $.ajax({
                    url: '@Url.Action("GetExchangeRate", "ExchangeRate")',
                    type: "GET",
                    async: true,
                    contentType: "application/json; charset=utf-8",
                    //data: JSON.stringify(data),
                    dataType: "json",
                    success: function (res) {
                        //customerOrderID.val(customerId.val());
                        usdTokhr.val(res.usdTokhr);
                        usdToKhrChange.val(res.usdToKhrChange);
                        usdToTHB.val(res.usdToTHB);

                        _totalAmountRiel = totalAmount.val() * res.usdTokhr;
                        _totalAmountRiel = round(_totalAmountRiel, -2);
                        totalAmountRiel.val(_totalAmountRiel);
                        if (_msg > 0) {
                            calTotalReturn();
                            receiveMoney();
                        } else {
                            netAmountRiel.val(_totalAmountRiel);
                            amtOwedRiel.val(_totalAmountRiel);
                        }
                    },
                    error: function (message) {
                        if (message == 405) {
                            Swal.fire({
                                icon: 'error',
                                title: 'Oops...',
                                text: 'You do not have access to do that.'
                            })
                        }
                    }
                });
            }

            function discount(val) {
                if (val == 'dolar') {
                    _amtDisc = parseFloat(amtDisc.val());
                    _amtDiscRiel = _amtDisc * usdTokhr.val();
                    amtDiscRiel.val(round(_amtDiscRiel,-2));

                    _netAmount = parseFloat(totalAmount.val()) - _amtDisc;
                    netAmount.val(round(_netAmount, 2));

                    _netAmount = _netAmount * usdTokhr.val();
                    netAmountRiel.val(round(_netAmount, -2));

                    return true;
                }

                _amtDiscRiel = parseFloat(amtDiscRiel.val());
                _amtDisc = _amtDiscRiel / usdTokhr.val();
                amtDisc.val(round(_amtDisc, 2));

                _netAmount = parseFloat(totalAmount.val()) - _amtDisc;
                netAmount.val(round(_netAmount, 2));

                _netAmount = _netAmount * usdTokhr.val();
                netAmountRiel.val(round(_netAmount, -2));
            }

            function receiveMoney(val) {
                if (val == 'dolar') {
                    _amtReceivedRiel = parseFloat(amtReceivedRiel.val());
                    _netAmountRiel = parseFloat(netAmountRiel.val());
                    if (_amtReceivedRiel >= _netAmountRiel) {
                        amtReceived.val(0);
                    }
                    returnOrOweMoney();
                    return true;
                }
                _amtReceived = parseFloat(amtReceived.val());
                _netAmount = parseFloat(netAmount.val());
                if (_amtReceived >= _netAmount) {
                    amtReceivedRiel.val(0);
                }
                returnOrOweMoney();
            }

            function returnOrOweMoney() {
                _amtReceivedRiel = amtReceivedRiel.val();
                if (_amtReceivedRiel == '') {
                    _amtReceivedRiel = 0;
                    amtReceivedRiel.val(0);
                }
                _amtReceivedRiel = parseFloat(_amtReceivedRiel) / usdTokhr.val();

                _amtReceived = amtReceived.val();
                if (_amtReceived == '') {
                    _amtReceived = 0;
                    amtReceived.val(0);
                }
                _amtReceived = parseFloat(_amtReceived) + _amtReceivedRiel;

                _netAmount = parseFloat(netAmount.val());
                _amtReturn = _amtReceived - _netAmount;
    //////////set return money-----------------------
                if (_amtReturn > 0) {
                    amtReturn.val(round(_amtReturn, 2));
                    _amtReturnRiel = _amtReturn * usdToKhrChange.val();
                    amtReturnRiel.val(round(_amtReturnRiel, -2));

                    amtOwed.val(0);
                    amtOwedRiel.val(0);
                    return true;
                }
    /////////set owed money---------------------------
                _amtOwed = _netAmount - _amtReceived;
                _amtOwedRiel = _amtOwed * usdTokhr.val();
                amtOwed.val(round(_amtOwed, 2));
                amtOwedRiel.val(round(_amtOwedRiel, -2));

                amtReturn.val(0);
                amtReturnRiel.val(0);
            }

            function reloadProduct() {
                var subItems="";
                $.getJSON("@Url.Action("ReloadProduct", "Sales")", { id: 1 }, function (data) {
                    subItems += "<option value='" + '' +"'>" + 'ស្វែងរក...' + "</option>";
                  $.each(data,function(index,item){
                      subItems += "<option value='" + item.ProductID + "'>" + item.OrderComment + "</option>";
                  });
                    productFilter.html(subItems)
                });
            }

            function reloadKeep() {
                var subItems="";
                $.getJSON("@Url.Action("ReloadKeep", "Sales")", { id: 1 }, function (data) {
                    subItems += "<option value='" + '' +"'>" + '--Select--' + "</option>";
                  $.each(data,function(index,item){
                      subItems += "<option value='" + item.roomtableID + "'>" + item.CustomerName + "</option>";
                  });
                    roomtableID.html(subItems)
                });
            }

            //function round(value, exp) {
            //if (typeof exp === 'undefined' || +exp === 0)
            //    return Math.round(value);

            //value = +value;
            //exp = +exp;

            //if (isNaN(value) || !(typeof exp === 'number' && exp % 1 === 0))
            //    return NaN;

            //// Shift
            //value = value.toString().split('e');
            //value = Math.round(+(value[0] + 'e' + (value[1] ? (+value[1] + exp) : exp)));

            //// Shift back
            //value = value.toString().split('e');
            //return +(value[0] + 'e' + (value[1] ? (+value[1] - exp) : -exp));
            //}


            function calTotalReturn() {
                /////_totalAmount = parseFloat(netAmountReturn.val()) - parseFloat(totalAmountOld.val());
                _netAmount = parseFloat(totalAmount.val()) - parseFloat(netAmountReturn.val());
                _netAmount = _netAmount.toFixed(2);

                totalAmount.val(_netAmount);
                netAmount.val(_netAmount);
                amtOwed.val(_netAmount);

                /////_totalAmountRiel = parseFloat(netAmountReturnRiel.val()) - parseFloat(totalAmountRielOld.val());
                _netAmountRiel = parseFloat(totalAmountRiel.val()) - parseFloat(netAmountReturnRiel.val());
                _netAmountRiel = round(_netAmountRiel, -2);

                totalAmountRiel.val(_netAmountRiel);
                netAmountRiel.val(_netAmountRiel);
                amtOwedRiel.val(netAmountRiel);

                //var netAmountRiel = $('#netAmountRiel');
                //var _netAmount = 0;
                //var _netAmountRiel = 0;
                //var _totalAmountRiel = 0;
                //var totalAmountOld = $('#totalAmountOld');
                //var totalAmountRielOld = $('#totalAmountRielOld');
                //var netAmountReturn = $('#netAmountReturn');
                //var netAmountReturnRiel = $('#netAmountReturnRiel');
            }
////////datatable -------------------------------------------
    var _dataTable = $('.data-table')
        .DataTable({
            sAjaxSource: '@Url.Action("GetData", "Sales")',
            bServerSide: true,
            pageLength: 25,
            bProcessing: true,
            lengthChange: false,
            searching: false,
            columns: [
                {
                    data: null, "sortable": false,
                    render: function (data, type, row, meta) {
                        return meta.row + meta.settings._iDisplayStart + 1;
                    }
                },
                { data: "PrdNameEng", autoWidth: true, searchable: true },
                { data: "unitType", searchable: true },
                {
                    data: "orderQty",
                    render: function (data, type, full, meta) {
                        return '<input type="text" data-id="' + full.orderDetailsID + '" class="orderQty textbox-grid" value="' + data + '">';
                    }
                },
                {
                    data: "unitPrice",
                    render: function (data, type, full, meta) {
                        return '<input type="text" data-id="' + full.orderDetailsID + '" class="unitPrice textbox-grid" value="' + data + '">';
                    }
                },
                {
                    data: "AmtDisc",
                    render: function (data, type, full, meta) {
                        return '<input type="text" data-id="' + full.orderDetailsID + '" class="AmtDisc textbox-grid" value="' + data + '">';
                    }
                },
                { data: "totalAmt", searchable: true, render: $.fn.dataTable.render.number(',', '.', 2, '') },
                {
                    data: "orderDetailsID",
                    render: function (data, type, full, meta) {
                        var actions = '<button type="button" data-id="' + data + '" class="btn btnDelete btn-sm btn-danger mx-1"><i class="fa fa-trash"></i></button>';
                            //actions += '<button type="button" data-id="' + data + '" class="btn btnEdit btn-sm btn-primary mx-1" > <i class="fa fa-edit"></i></a >';
                        return actions;
                    }
                },
                { data: "customerOrderID", searchable: false }
            ],
            columnDefs: [
                {
                    "targets": [8],
                    "visible": false,
                    "searchable": false
                }],
            footerCallback: function (row, data, start, end, display) {
                var api = this.api(), data;
                // Remove the formatting to get integer data for summation
                var intVal = function (i) {
                    return typeof i === 'string' ?
                        i.replace(/[\$,]/g, '') * 1 :
                        typeof i === 'number' ?
                            i : 0;
                };

                // Total over all pages

                totalAmt = api
                    .column(6)
                    .data()
                    .reduce(function (a, b) {
                        return intVal(a) + intVal(b);
                    }, 0);

                customerID = api
                    .column(8)
                    .data()
                    .reduce(function (a, b) {
                        return intVal(b);
                    }, 0);

                $(api.column(6).footer()).html(
                    '$' + totalAmt.toFixed(2),
                    totalAmount.val(totalAmt.toFixed(2)),
                    netAmount.val(totalAmt.toFixed(2)),
                    amtOwed.val(totalAmt.toFixed(2)),
                );

                $(api.column(8).footer()).html(
                    customerID,
                    customerOrderID.val(customerID),
                );
            }
        });
    });
    </script>
}



